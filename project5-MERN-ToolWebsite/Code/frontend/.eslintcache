[{"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\index.js":"1","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\App.js":"2","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\NumContext.js":"3","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\pageNotFound\\Notfound.js":"4","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Cart\\Cart.js":"5","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Products\\Products.js":"6","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Footer\\Footer.js":"7","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Header\\Header.js":"8","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Register\\loginPage.jsx":"9","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Product\\Product.jsx":"10","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\AllProducts\\AllProducts.jsx":"11","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Home_page\\home.jsx":"12","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\profilePage\\Profile.jsx":"13","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Cart\\Empyt.js":"14","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Footer\\Contact.js":"15","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Header\\Menu.js":"16","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\meals.js":"17","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\juices.js":"18","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\sweets.js":"19","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\categories.js":"20","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Register\\login.jsx":"21","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\profilePage\\Htabel.jsx":"22","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\profilePage\\editData.jsx":"23","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\gallery.jsx":"24","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\about.jsx":"25","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\slider.jsx":"26","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\Server\\serves.jsx":"27","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\location.jsx":"28","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\ProfileCards.jsx":"29","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\ProfileCard.jsx":"30"},{"size":220,"mtime":1612636001000,"results":"31","hashOfConfig":"32"},{"size":2127,"mtime":1612636001000,"results":"33","hashOfConfig":"32"},{"size":84,"mtime":1612636001000,"results":"34","hashOfConfig":"32"},{"size":479,"mtime":1612636001000,"results":"35","hashOfConfig":"32"},{"size":9441,"mtime":1612636001000,"results":"36","hashOfConfig":"32"},{"size":3370,"mtime":1612636001000,"results":"37","hashOfConfig":"32"},{"size":2121,"mtime":1612636001000,"results":"38","hashOfConfig":"32"},{"size":1857,"mtime":1612636001000,"results":"39","hashOfConfig":"32"},{"size":387,"mtime":1612636001000,"results":"40","hashOfConfig":"32"},{"size":6180,"mtime":1612636001000,"results":"41","hashOfConfig":"32"},{"size":2521,"mtime":1612636001000,"results":"42","hashOfConfig":"32"},{"size":637,"mtime":1612636001000,"results":"43","hashOfConfig":"32"},{"size":4159,"mtime":1612636001000,"results":"44","hashOfConfig":"32"},{"size":523,"mtime":1612636001000,"results":"45","hashOfConfig":"32"},{"size":2151,"mtime":1612636001000,"results":"46","hashOfConfig":"32"},{"size":1520,"mtime":1612636001000,"results":"47","hashOfConfig":"32"},{"size":3814,"mtime":1612636001000,"results":"48","hashOfConfig":"32"},{"size":3001,"mtime":1612636001000,"results":"49","hashOfConfig":"32"},{"size":2593,"mtime":1612636001000,"results":"50","hashOfConfig":"32"},{"size":324,"mtime":1612636001000,"results":"51","hashOfConfig":"32"},{"size":20949,"mtime":1612636001000,"results":"52","hashOfConfig":"32"},{"size":4949,"mtime":1612636001000,"results":"53","hashOfConfig":"32"},{"size":2477,"mtime":1612636001000,"results":"54","hashOfConfig":"32"},{"size":2832,"mtime":1612636001000,"results":"55","hashOfConfig":"32"},{"size":1408,"mtime":1612636001000,"results":"56","hashOfConfig":"32"},{"size":3207,"mtime":1612636001000,"results":"57","hashOfConfig":"32"},{"size":1538,"mtime":1612636001000,"results":"58","hashOfConfig":"32"},{"size":1682,"mtime":1612636001000,"results":"59","hashOfConfig":"32"},{"size":1427,"mtime":1612636001000,"results":"60","hashOfConfig":"32"},{"size":339,"mtime":1612636001000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"uxpufw",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\index.js",[],["132","133"],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\App.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\NumContext.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\pageNotFound\\Notfound.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Cart\\Cart.js",["134","135"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport \"./style.scss\";\nimport axios from \"axios\";\nimport { NumContext } from \"../../NumContext\";\nimport Empyt from \"./Empyt\";\nimport Drawer from \"react-drag-drawer\";\nimport { WaveTopBottomLoading } from \"react-loadingg\";\n\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Typography,Breadcrumbs\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Cart() {\n  document.title = \"Askadenya | Cart Page\";\n  document.getElementsByTagName(\n    \"META\"\n  )[4].content = `categories, Askadenya, menu, Add, Buy, Order`;\n  document.getElementsByTagName(\n    \"META\"\n  )[3].content = \"This page is dedicated to displaying products for each category\";\n\n\n  const { decresNum , setcartNumber } = useContext(NumContext);\n\n  const [cartItems, setcartItems] = useState([]);\n  const [updateT, setupdateT] = useState(false);\n  const [selectedOption, setselectedOption] = useState([]);\n  const [numberOfMeals, setNumberOfMeals] = useState(1);\n  const [confirmMsg, setconfirmMsg] = useState(false);\n  const [isLoading, setisLoading] = useState(true);\n  const [totalP, settotalP] = useState(0);\n\n  const getItems = () => {\n    axios\n      .get(\"http://localhost:8000/cart/\" + sessionStorage.getItem(\"userId\"))\n      .then((res) => {\n        setcartItems(res.data);\n        setisLoading(false)\n      });\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n  useEffect(() => {\n    let t=0;\n    cartItems.map((cartItem)=>{\n      t += cartItem.price * cartItem.number\n    })\n    settotalP(t)\n\n  }, [cartItems]);\n\n  const deleteitem = (id) => {\n    axios\n      .delete(\n        \"http://localhost:8000/cart/\" +\n          sessionStorage.getItem(\"userId\") +\n          \"/\" +\n          id\n      )\n      .then(() => {\n        decresNum();\n        getItems();\n      });\n  };\n  const handleCheckbox = (e, name) => {\n    console.log(name);\n    let so = selectedOption;\n    for (let i = 0; i < so.length; i++) {\n      if (so[i].name == name) {\n        so[i].value = e.target.checked;\n      }\n    }\n    // updateT.adds = so;\n    setselectedOption(so);\n  };\n  const handleNumber = (e) => {\n    setNumberOfMeals(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const obj = {\n      number: numberOfMeals,\n      adds: selectedOption,\n    };\n\n    axios\n      .put(\n        \"http://localhost:8000/cart/update/\" +\n          sessionStorage.getItem(\"userId\") +\n          \"/\" +\n          updateT._id,\n        obj\n      )\n      .then((res) => {\n        getItems();\n        setupdateT(false);\n      });\n  };\n  const confirm = () => {\n    axios\n      .delete(\n        \"http://localhost:8000/cart/all/\" + sessionStorage.getItem(\"userId\")\n      )\n      .then(() => {\n        setcartItems([])\n        setcartNumber(0);\n        \n      });\n  };\n  if(isLoading){\n    return (\n      <>\n        <div className=\"marginLoading\"></div>\n        {/* <CoffeeLoading size=\"small\" color=\"#02594d\" /> */}\n        <WaveTopBottomLoading size=\"large\" color=\"#02594d\" />\n      </>\n    );\n\n  }\n  if (cartItems.length) {\n    return (\n      <section className=\"cart\">\n        <section className=\"Breadcrumbs\">\n        <Breadcrumbs  separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link to=\"/\">\n          \n        {/* <HomeIcon/> */}\n          Home\n        </Link>\n        <Typography color=\"textPrimary\">Cart</Typography>\n      </Breadcrumbs>\n        </section>\n        \n        <main className=\"card-container\">\n          <Container maxWidth=\"md\">\n            <Grid container spacing={4}>\n              {cartItems.map((card) => (\n                <Grid item key={card._id} xs={12} sm={6} md={4}>\n                  <Card className=\"card\">\n                    <CardMedia\n                      className=\"cardMedia\"\n                      image={card.imgUrl}\n                      title=\"Image title\"\n                    />\n                    <CardContent className=\"cardContent\">\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {card.name}\n                      </Typography>\n                      <Typography>\n                        {card.adds.map((add) => add.value && add.name + \" | \")}\n                      </Typography>\n                      <Typography>Quantity: {card.number}</Typography>\n                      <Typography>\n                        Price: {card.price * card.number} JOD\n                      </Typography>\n                    </CardContent>\n                    <CardActions className=\"CardActions\">\n                      <Button\n                        onClick={() => {\n                          setupdateT(card);\n                          setselectedOption(card.adds);\n                          setNumberOfMeals(card.number);\n                        }}\n                        size=\"small\"\n                        className=\"Button\"\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        onClick={() => {\n                          deleteitem(card._id);\n                        }}\n                        size=\"small\"\n                        color=\"secondary\"\n                      >\n                        Delete\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n            <div className=\"hr\"></div>\n            <div className=\"chickout-div\">\n              <h2>Confirm your order</h2>\n              <Button\n                size=\"large\"\n                style={{\n                  background: \" #02594d\",\n                  marginTop: \"1.1rem\",\n                  fontSize: \"0.8rem\",\n                  marginLeft: \"1rem\",\n                  color: \"#ffedff\",\n                }}\n                className=\"SaveButton\"\n                onClick={() => {\n                  confirm();\n                  setconfirmMsg(true)\n                }}\n              >\n                Confirm | {totalP} JOD\n              </Button>\n            </div>\n          </Container>\n        </main>\n\n        <Drawer open={updateT} onRequestClose={() => setupdateT(false)}>\n          {/* <Grid item key={updateT._id} xs={12} sm={6} md={4}> */}\n          <Card className=\"card cardEdit\">\n            <img src={updateT.imgUrl} alt=\"\" />\n            <form action=\"\" onSubmit={handleSubmit}>\n              <CardContent className=\"cardContent\">\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {updateT.name}\n                </Typography>\n                <Typography>\n                  {updateT.adds &&\n                    updateT.adds.map((option) => (\n                      <div>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              defaultChecked={option.value}\n                              onChange={(e) => {\n                                // option.value = !option.value;\n                                handleCheckbox(e, option.name);\n                              }}\n                              color=\"primary\"\n                            />\n                          }\n                          label={option.name}\n                        />\n                      </div>\n                    ))}\n                </Typography>\n                <Typography>\n                  <TextField\n                    label=\"Quantity\"\n                    type=\"number\"\n                    className=\"Quantity\"\n                    InputProps={{ inputProps: { min: 1, max: 30 } }}\n                    defaultValue={updateT.number}\n                    onChange={(e) => {\n                      handleNumber(e);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n                  <Button\n                    size=\"large\"\n                    style={{\n                      background: \" #02594d\",\n                      marginTop: \"1.1rem\",\n                      fontSize: \"0.8rem\",\n                      marginLeft: \"1rem\",\n                      color: \"#ffedff\",\n                    }}\n                    className=\"SaveButton\"\n                    type=\"submit\"\n                  >\n                    Save\n                  </Button>\n                </Typography>\n              </CardContent>\n            </form>\n          </Card>\n          {/* </Grid> */}\n        </Drawer>\n        \n      </section>\n    );\n  } else {\n    return (\n    <>\n    <Drawer open={confirmMsg} onRequestClose={() => setconfirmMsg(false)}>\n          <div className=\"popup\">\n            Your order has been confirmed,<br/> you can check it in\n            <Link to={`/profile`}>\n              <button className=\"AwesomeBtn msgBtn\">your profile ➜</button>\n            </Link>\n            \n          </div>\n        </Drawer>\n        <Empyt />\n    </>\n    );\n  }\n}\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Products\\Products.js",["136","137"],"import React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./style.scss\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\nBreadcrumbs\n} from \"@material-ui/core\";\n\nimport juices,{informationJuices} from \"../../Data/juices\";\nimport meals,{informationMeals} from \"../../Data/meals\";\nimport sweets,{informationSweets} from \"../../Data/sweets\";\nexport default function Products({ match }) {\n  const [data, setdata] = useState([]);\n  useEffect(() => {\n    if (match.params.category == \"Cold Drinks\") {\n      setdata(juices);\n      document.title = informationJuices.Title;\n      document.getElementsByTagName(\n        \"META\"\n      )[4].content = informationJuices.keywords;\n      document.getElementsByTagName(\n        \"META\"\n      )[3].content = informationJuices.description;\n    \n    } else if (match.params.category == \"Fast Food\") {\n      setdata(meals);\n      document.title = informationMeals.Title;\n      document.getElementsByTagName(\n        \"META\"\n      )[4].content = informationMeals.keywords;\n      document.getElementsByTagName(\n        \"META\"\n      )[3].content = informationMeals.description;\n    } else {\n      setdata(sweets);\n      document.title = informationSweets.Title;\n      document.getElementsByTagName(\n        \"META\"\n      )[4].content = informationSweets.keywords;\n      document.getElementsByTagName(\n        \"META\"\n      )[3].content = informationSweets.description;\n    }\n  }, [match.params.category]);\n\n  return (\n    <section className=\"products\">\n      <section className=\"Breadcrumbs\">\n        <Breadcrumbs  separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link to=\"/\">\n          Home\n        </Link>\n        <Typography color=\"textPrimary\">{match.params.category}</Typography>\n      </Breadcrumbs>\n        </section>\n      <main className=\"card-container\">\n        <Container maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {data.map((card) => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Link to={`/menu/${match.params.category}/${card.name}`}>\n                  <Card className=\"card\">\n                    <CardMedia\n                      className=\"cardMedia\"\n                      image={card.imgUrl}\n                      title=\"Image title\"\n                    />\n                    <CardContent className=\"cardContent\">\n                      <Typography\n                        className=\"Pname\"\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\"\n                      >\n                        {card.name}\n                      </Typography>\n                      <Typography className=\"Pprice\">\n                        Price: {card.price} JOD\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Link>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n    </section>\n  );\n}\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Footer\\Footer.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Header\\Header.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Register\\loginPage.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Product\\Product.jsx",["138","139","140","141","142","143"],"import React, { useState, useEffect, useContext } from \"react\";\nimport \"./style.scss\";\nimport juices from \"../../Data/juices\";\nimport meals from \"../../Data/meals\";\nimport sweets from \"../../Data/sweets\";\nimport axios from \"axios\";\nimport { NumContext } from \"../../NumContext\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  TextField,\n  Breadcrumbs,\n  Typography,\n} from \"@material-ui/core\";\nimport Drawer from \"react-drag-drawer\";\nimport { Link } from \"react-router-dom\";\n\nfunction Products({ match }) {\n  const { incresNum } = useContext(NumContext);\n  const [data, setdata] = useState([]);\n  const [product, setproduct] = useState({});\n  const [selectedOption, setselectedOption] = useState([]);\n  const [numberOfMeals, setNumberOfMeals] = useState(1);\n  const [msgTogel, setmsgTogel] = useState(false);\n  const [msgloginTogel, setmsgloginTogel] = useState(false);\n  const getdata = async () => {\n    if (match.params.category == \"Cold Drinks\") {\n      setdata(juices);\n    } else if (match.params.category == \"Fast Food\") {\n      setdata(meals);\n    } else {\n      setdata(sweets);\n    }\n  };\n\n  useEffect(() => {\n    getdata().then(async () => {\n      const productobj = data.find(\n        (producto) => producto.name == match.params.product\n      );\n      setproduct(productobj);\n    });\n  }, [data]);\n  // =====================\n  if (product) {\n    document.title = `Askadenya | ${match.params.category} | ${match.params.product}`;\n    document.getElementsByTagName(\"META\")[4].content = product.keywords;\n    document.getElementsByTagName(\"META\")[3].content = product.description;\n  }\n  // ========================\n  useEffect(() => {\n    if (product && product.options) {\n      let so = [];\n      product.options.map((op) => {\n        so.push({ name: op, value: false });\n      });\n      setselectedOption(so);\n    }\n  }, [product]);\n\n  const handleCheckbox = (e, name) => {\n    let so = selectedOption;\n    for (let i = 0; i < so.length; i++) {\n      if (so[i].name == name) {\n        so[i].value = e.target.checked;\n      }\n    }\n    setselectedOption(so);\n  };\n\n  const handleNumber = (e) => {\n    setNumberOfMeals(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (sessionStorage.getItem(\"userId\")) {\n      const obj = {\n        name: product.name,\n        imgUrl: product.imgUrl,\n        pid: product.id,\n        number: numberOfMeals,\n        adds: selectedOption,\n        price: product.price,\n      };\n      axios\n        .post(\n          \"http://localhost:8000/cart/\" + sessionStorage.getItem(\"userId\"),\n          obj\n        )\n        .then((res) => {\n          incresNum();\n          setmsgTogel(true);\n        });\n    } else {\n      setmsgloginTogel(true);\n    }\n  };\n\n  if (product)\n    return (\n      <>\n        <section className=\"Breadcrumbs\">\n          <Breadcrumbs\n            separator={<NavigateNextIcon fontSize=\"small\" />}\n            aria-label=\"breadcrumb\"\n          >\n            <Link to=\"/\">Home</Link>\n            <Link to={\"/menu/\" + match.params.category}>\n              {match.params.category}\n            </Link>\n            <Typography color=\"textPrimary\">{match.params.product}</Typography>\n          </Breadcrumbs>\n        </section>\n        <section className=\"productPage\">\n          <section className=\"productContainer\">\n            <img src={product.imgUrl} alt={product.name} className=\"mealImg\" />\n            <article className=\"discription\">\n              <h2 className=\"mealName\">{product.name}</h2>\n              <p className=\"mealInfo\">{product.description}</p>{\" \"}\n              <span id=\"price\">{product.price} JOD</span>\n              <div className=\"options\">\n                <form onSubmit={handleSubmit}>\n                  {product.options &&\n                    product.options.map((option) => (\n                      <div>\n                        <FormControlLabel\n                          control={\n                            <Checkbox\n                              onChange={(e) => {\n                                handleCheckbox(e, option);\n                              }}\n                              color=\"primary\"\n                            />\n                          }\n                          label={option}\n                        />\n                      </div>\n                    ))}\n\n                  <TextField\n                    label=\"Quantity\"\n                    type=\"number\"\n                    InputProps={{ inputProps: { min: 1, max: 30 } }}\n                    defaultValue={1}\n                    onChange={(e) => {\n                      handleNumber(e);\n                    }}\n                    className=\"Quantity\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"filled\"\n                  />\n\n                  <Button\n                    type=\"submit\"\n                    // fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className=\"order\"\n                  >\n                    Order | {product.price * numberOfMeals} JOD\n                  </Button>\n                </form>\n              </div>\n            </article>\n          </section>\n          <Drawer open={msgTogel} onRequestClose={() => setmsgTogel(false)}>\n            <div className=\"popup\">\n              Awesome! Your food is on the Cart\n              <Link to={`/cart`}>\n                <button className=\"AwesomeBtn msgBtn\">\n                  Check it out now! ➜\n                </button>\n              </Link>\n            </div>\n          </Drawer>\n          <Drawer\n            open={msgloginTogel}\n            onRequestClose={() => setmsgloginTogel(false)}\n          >\n            <div className=\"loginMsg\">\n              It's seems like you don't have an account, you still can join us.\n              <Link to={`/login`}>\n                <button className=\"msgBtn\">Signup now! ➜</button>\n              </Link>\n            </div>\n          </Drawer>\n        </section>\n      </>\n    );\n  else {\n    return <p>loding...</p>;\n  }\n}\n\nexport default Products;\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\AllProducts\\AllProducts.jsx",["144","145"],"import React, { useEffect, useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link } from \"react-router-dom\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { Breadcrumbs } from \"@material-ui/core\";\nimport categories from \"../../Data/categories\";\n\nexport default function AllProducts() {\n  return (\n    <div className=\"AllProducts\">\n      <section className=\"Breadcrumbs\">\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link to=\"/\">Home</Link>\n          <Typography color=\"textPrimary\">All Products</Typography>\n        </Breadcrumbs>\n      </section>\n      {categories.map((categorie) => (\n        <section\n          data-aos=\"fade-in\"\n          data-aos-duration=\"1500\"\n          className=\"products\"\n        >\n          <main className=\"card-container\">\n            <Container maxWidth=\"md\">\n              <h2 style={{ color: \"#02594d\" }}>{categorie.name}</h2>\n              <Grid container spacing={4}>\n                {categorie.data.map((card) => (\n                  <Grid item key={card} xs={12} sm={6} md={4}>\n                    <Link to={`/menu/${categorie.name}/${card.name}`}>\n                      <Card className=\"card\">\n                        <CardMedia\n                          className=\"cardMedia\"\n                          image={card.imgUrl}\n                          title=\"Image title\"\n                        />\n                        <CardContent className=\"cardContent\">\n                          <Typography\n                            className=\"Pname\"\n                            gutterBottom\n                            variant=\"h5\"\n                            component=\"h2\"\n                          >\n                            {card.name}\n                          </Typography>\n                          <Typography className=\"Pprice\">\n                            Price: {card.price} JOD\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    </Link>\n                  </Grid>\n                ))}\n              </Grid>\n            </Container>\n          </main>\n        </section>\n      ))}\n    </div>\n  );\n}\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Home_page\\home.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\profilePage\\Profile.jsx",["146","147","148","149","150","151","152"],"import \"./style.scss\";\nimport React, { useState, useEffect, useContext } from \"react\";\n\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button, TextField, Typography, Breadcrumbs } from \"@material-ui/core\";\nimport EditData from \"./editData\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport { WaveTopBottomLoading } from \"react-loadingg\";\n\nimport { Link } from \"react-router-dom\";\nimport Htabel from \"./Htabel\";\n// import profPic from \"./img/avatar.png\";\nimport { NumContext } from \"../../NumContext\";\n\nfunction Profile() {\n  document.title = \"Askadenya | Profile Page\";\n  document.getElementsByTagName(\"META\")[4].content =\n    \"Phone number, Name, Email, Location\";\n  document.getElementsByTagName(\"META\")[3].content =\n    \"This page is dedicated to displaying all information about user\";\n\n  const { setisLogin, setcartNumber } = useContext(NumContext);\n  const [user, setuser] = useState(null);\n  const [redirect, setredirect] = useState(false);\n  const [toggle, settoggle] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [phone, setphone] = useState(\"\");\n  const getItems = () => {\n    axios\n      .get(\"http://localhost:8000/users/\" + sessionStorage.getItem(\"userId\"))\n      .then((res) => {\n        setuser(res.data);\n        // console.log(res.data);\n      });\n  };\n\n  useEffect(() => {\n    getItems();\n  }, []);\n\n  const editDone = () => {\n    settoggle(false);\n    getItems();\n  };\n\n  //   ===================================\n  //   ===================================\n  if (redirect) {\n    return <Redirect to=\"/\" />;\n  }\n  if (user) {\n    return (\n      <div className=\"Profile\">\n        <section className=\"Breadcrumbs\">\n          <Breadcrumbs\n            separator={<NavigateNextIcon fontSize=\"small\" />}\n            aria-label=\"breadcrumb\"\n          >\n            <Link to=\"/\">\n              {/* <HomeIcon/> */}\n              Home\n            </Link>\n            <Typography color=\"textPrimary\">Profile</Typography>\n          </Breadcrumbs>\n        </section>\n        <section className=\"center-profile\">\n          <div className=\"profileb\">\n            <div className=\"profile-pic\"></div>\n            <div className=\"imgBorder\">\n              <img src={user.avatar} alt=\" Profile \" />\n            </div>\n            {!toggle ? (\n              <>\n                <div className=\"containwe-t\">\n                  <h2>{user.fullName}</h2>\n                  <h4>{user.email}</h4>\n                  <h4>{user.phone}</h4>\n                </div>\n                <div className=\"changeInfo\">\n                  <div className=\"editorsBtn\">\n                    <Button\n                      className=\"btn EditBtn\"\n                      size=\"small\"\n                      color=\"\"\n                      variant=\"contained\"\n                      onClick={() => {\n                        settoggle(true);\n                      }}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      className=\"btn \"\n                      size=\"small\"\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      onClick={() => {\n                        setcartNumber(0);\n                        setisLogin(false);\n                        sessionStorage.clear();\n                        setredirect(true);\n                      }}\n                    >\n                      Logout\n                    </Button>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <>\n                <EditData\n                  fullName={user.fullName}\n                  phone={user.phone}\n                  editDone={editDone}\n                />\n              </>\n            )}\n          </div>\n\n          <Htabel />\n        </section>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <div className=\"marginLoading\"></div>\n        {/* <CoffeeLoading size=\"small\" color=\"#02594d\" /> */}\n        <WaveTopBottomLoading size=\"large\" color=\"#02594d\" />\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Cart\\Empyt.js",["153"],"import { Link } from \"react-router-dom\";\n\nimport React from \"react\";\nimport emoji from \"./emoji.png\";\nexport default function Empyt() {\n  return (\n    <div class=\"empty\">\n      <img class=\"img-empty\" src={emoji}></img>\n      <div className=\"content\">\n        <h2>Your cart is empty!</h2>\n        <p>\n          Don't miss the opportunity to order from our website, order your\n          meal now!\n        </p>\n        <Link\n          to=\"/menu\"\n        >\n          Back to menu\n        </Link>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Footer\\Contact.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\Header\\Menu.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\meals.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\juices.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\sweets.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Data\\categories.js",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\Register\\login.jsx",["154","155","156","157","158","159","160","161","162"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport \"./style.scss\";\nimport chef from \"./chef.png\";\nimport waiter from \"./waiter.png\";\nimport GoogleLogin from \"react-google-login\";\n\n// import FacebookLogin from \"react-facebook-login\";\nimport FacebookLogin from \"react-facebook-login/dist/facebook-login-render-props\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fullNameS: \"\",\n      emailS: \"\",\n      phoneS: \"\",\n      passwordS: \"\",\n      emailL: \"\",\n      passwordL: \"\",\n      redirect: false,\n      emailErrorL: \"\",\n      passwordErrorL: \"\",\n      passwordErrorS: \"\",\n      emailErrorS: \"\",\n      phoneErrorS: \"\",\n      islogin: false,\n      display: \"block\",\n      display2: \"block\",\n    };\n    // this.\n  }\n  responseSuccessGoogle = (res) => {\n    if (res) {\n      if (res.profileObj.name) {\n        const registered = {\n          fullName: res.profileObj.name,\n          email: res.profileObj.email,\n          avatar: res.profileObj.imageUrl,\n        };\n        axios\n          .post(\"http://localhost:8000/users/facebook\", registered)\n          .then((res) => {\n            sessionStorage.setItem(\"userId\", res.data._id);\n            this.props.setisLogin(true);\n            this.props.getcartNumber();\n\n            this.setState({\n              redirect: true,\n            });\n          });\n      }\n    }\n  };\n  responseFailureGoogle = (res) => {\n    console.log(res);\n  };\n  responseFacebook = (response) => {\n    if (response) {\n      if (response.name) {\n        const registered = {\n          fullName: response.name,\n          email: response.email,\n          avatar: response.picture.data.url,\n        };\n        axios\n          .post(\"http://localhost:8000/users/facebook\", registered)\n          .then((res) => {\n            sessionStorage.setItem(\"userId\", res.data._id);\n            this.props.setisLogin(true);\n            this.props.getcartNumber();\n\n            this.setState({\n              redirect: true,\n            });\n          });\n      }\n    }\n  };\n\n  htoggle = () => {\n    this.setState({ display: \"none\", display2: \"block\" });\n  };\n\n  htoggle2 = () => {\n    this.setState({ display2: \"none\", display: \"block\" });\n  };\n  hchange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmitS = (event) => {\n    event.preventDefault();\n    this.setState({\n      emailErrorL: \"\",\n      passwordErrorL: \"\",\n      passwordErrorS: \"\",\n      emailErrorS: \"\",\n      phoneErrorS: \"\",\n    });\n\n    const emailError = validator.isEmail(this.state.emailS);\n    const passwordError = validator.isStrongPassword(this.state.passwordS, {\n      minLength: 6,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 0,\n    });\n    if (emailError && passwordError) {\n      const registered = {\n        fullName: this.state.fullNameS,\n        email: this.state.emailS,\n        password: this.state.passwordS,\n      };\n      axios\n        .post(\"http://localhost:8000/users/signup\", registered)\n        .then((res) => {\n          if (res.data === \"user already registered\") {\n            this.setState({\n              emailErrorS: \"User already registered\",\n            });\n          } else {\n            sessionStorage.setItem(\"userId\", res.data._id);\n            this.props.setisLogin(true);\n            this.props.getcartNumber();\n            this.setState({\n              redirect: true,\n            });\n          }\n        });\n    } else if (!passwordError) {\n      this.setState({\n        passwordErrorS:\n          \"must include at least 1 Lowercase, Uppercase, and Number\",\n      });\n    }\n    if (!emailError) {\n      this.setState({\n        emailErrorS: \"Invalid Email\",\n      });\n    }\n  };\n\n  onSubmitL = (e) => {\n    e.preventDefault();\n    this.setState({\n      emailErrorL: \"\",\n      passwordErrorL: \"\",\n      passwordErrorS: \"\",\n      emailErrorS: \"\",\n      phoneErrorS: \"\",\n    });\n    const user = {\n      email: this.state.emailL,\n      password: this.state.passwordL,\n    };\n    axios.post(\"http://localhost:8000/users/login\", user).then((res) => {\n      if (res.data === \"user not found\") {\n        this.setState({\n          emailErrorL: \"User not found\",\n        });\n      } else if (res.data === \"wrong password\") {\n        this.setState({\n          passwordErrorL: \"Wrong password\",\n        });\n      } else {\n        sessionStorage.setItem(\"userId\", res.data._id);\n        this.props.setisLogin(true);\n        this.props.getcartNumber();\n        this.setState({\n          redirect: true,\n        });\n      }\n    });\n  };\n  // ---------------------------------------------\n  // -----------------------------------------\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.state.islogin) {\n      return (\n        <div className=\"register\">\n          {/*------------------------ login form ------------------------------ */}\n          <div className=\"container mt-5 \">\n            <div className=\"form-container sign-up-container mt-2\">\n              <form onSubmit={this.onSubmitS}>\n                <h1 className=\"font-weight-bold\">Create Account</h1>\n                <div className=\"social-container\">\n                  <FacebookLogin\n                    className=\"social\"\n                    appId=\"436529724191626\"\n                    autoLoad={false}\n                    fields=\"name,email,picture.type(large)\"\n                    callback={this.responseFacebook}\n                    render={(renderProps) => (\n                      <a onClick={renderProps.onClick} className=\"social\">\n                        <i className=\"fab fa-facebook-f\"></i>\n                      </a>\n                    )}\n                  />\n                  <GoogleLogin\n                    clientId=\"99398379882-rgd084aj9nvmn18uhio87pa6cq31jov2.apps.googleusercontent.com\"\n                    onSuccess={this.responseSuccessGoogle}\n                    onFailure={this.responseFailureGoogle}\n                    render={(renderProps) => (\n                      <a\n                        href=\"#\"\n                        onClick={renderProps.onClick}\n                        className=\"social\"\n                      >\n                        <i className=\"fab fa-google\"></i>\n                      </a>\n                    )}\n                  />\n\n                  {/* <a href=\"#\" className=\"social\">\n                    <i className=\"fab fa-google\"></i>\n                  </a>\n                  <a href=\"#\" className=\"social\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                  </a> */}\n                </div>\n\n                <span>or create your own account</span>\n\n                <TextField\n                  required\n                  label=\" Full Name\"\n                  name=\"fullNameS\"\n                  onChange={this.hchange}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  autoFocus\n                />\n                <TextField\n                  required\n                  error={this.state.emailErrorS}\n                  type=\"email\"\n                  label=\" Email\"\n                  name=\"emailS\"\n                  onChange={this.hchange}\n                  helperText={this.state.emailErrorS}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <TextField\n                  required\n                  error={this.state.passwordErrorS}\n                  type=\"password\"\n                  label=\" Password\"\n                  name=\"passwordS\"\n                  onChange={this.hchange}\n                  helperText={this.state.passwordErrorS}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  autoFocus\n                />\n                <Button\n                  size=\"large\"\n                  className=\"btn btn-info btn-rounded\"\n                  type=\"submit\"\n                >\n                  Sign up\n                </Button>\n              </form>\n            </div>\n\n            <div className=\"form-container sign-in-container\">\n              <form onSubmit={this.onSubmitL}>\n                <h1 className=\"font-weight-bold\">Sign in</h1>\n                <div className=\"social-container\">\n                  {/* <a className=\"social\"> */}\n                  {/* <label htmlFor=\"tessst\">\n                      <i className=\"fab fa-facebook-f\"></i>\n                    </label>\n                  </a> */}\n\n                  <FacebookLogin\n                    className=\"social\"\n                    appId=\"436529724191626\"\n                    autoLoad={false}\n                    fields=\"name,email,picture.type(large)\"\n                    callback={this.responseFacebook}\n                    render={(renderProps) => (\n                      <a onClick={renderProps.onClick} className=\"social\">\n                        <i className=\"fab fa-facebook-f\"></i>\n                      </a>\n                    )}\n                  />\n                  <GoogleLogin\n                    clientId=\"99398379882-rgd084aj9nvmn18uhio87pa6cq31jov2.apps.googleusercontent.com\"\n                    onSuccess={this.responseSuccessGoogle}\n                    onFailure={this.responseFailureGoogle}\n                    render={(renderProps) => (\n                      <a\n                        href=\"#\"\n                        onClick={renderProps.onClick}\n                        className=\"social\"\n                      >\n                        <i className=\"fab fa-google\"></i>\n                      </a>\n                    )}\n                  />\n                  {/* <a href=\"#\" className=\"social\">\n                    <i className=\"fab fa-google\"></i>\n                  </a>\n                  <a href=\"#\" className=\"social\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                  </a> */}\n                </div>\n                <span>or use your account</span>\n\n                <TextField\n                  required\n                  // className=\"input\"\n                  error={this.state.emailErrorL}\n                  helperText={this.state.emailErrorL}\n                  name=\"emailL\"\n                  label=\" Email\"\n                  onChange={this.hchange}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n                <TextField\n                  required\n                  error={this.state.passwordErrorL}\n                  helperText={this.state.passwordErrorL}\n                  label=\" Password\"\n                  type=\"password\"\n                  name=\"passwordL\"\n                  onChange={this.hchange}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  autoFocus\n                />\n                <Button\n                  size=\"large\"\n                  className=\"btn btn-info btn-rounded \"\n                  type=\"submit\"\n                >\n                  Sign In\n                </Button>\n              </form>\n            </div>\n\n            <div className=\"overlay-container\">\n              <div className=\"overlay\">\n                <div className=\"overlay-panel overlay-left\">\n                  <img className=\"chef\" src={chef} alt=\"\" />\n\n                  <h1 className=\"font-weight-bold\">Good to see you!</h1>\n                  <p className=\"pargraph\">\n                    You already have an account? <br></br> Sign in!\n                  </p>\n                  <Button size=\"large\" className=\"but\" id=\"signIn\">\n                    Sign In\n                  </Button>\n                </div>\n                <div className=\"overlay-panel overlay-right\">\n                  <img className=\"chef\" src={waiter} alt=\"\" />\n\n                  <h1 className=\"font-weight-bold\">Hello, Friend!</h1>\n                  <p className=\"pargraph\">\n                    You don't have account yet? Don't worry! You still can join\n                    us\n                  </p>\n                  <Button\n                    size=\"large\"\n                    className=\"but\"\n                    id=\"signUp\"\n                    onClick={() => {\n                      this.setState({ islogin: false });\n                    }}\n                  >\n                    Sign Up\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* ///// */}\n        </div>\n      );\n    }\n\n    {\n      /*------------------------ signup form ------------------------------ */\n    }\n\n    return (\n      <div className=\"register\">\n        <div className=\"container mt-5 right-panel-active\">\n          <div\n            className=\"form-container sign-up-container mt-2\"\n            style={{ display: this.state.display2 }}\n          >\n            <form onSubmit={this.onSubmitS}>\n              <h1 className=\"font-weight-bold\">Create Account</h1>\n              <div className=\"social-container\">\n                {/* <a href=\"#\" className=\"social\">\n                  <i className=\"fab fa-facebook-f\"></i>\n                </a> */}\n                <FacebookLogin\n                  className=\"social\"\n                  appId=\"436529724191626\"\n                  autoLoad={false}\n                  fields=\"name,email,picture.type(large)\"\n                  callback={this.responseFacebook}\n                  render={(renderProps) => (\n                    <a onClick={renderProps.onClick} className=\"social\">\n                      <i className=\"fab fa-facebook-f\"></i>\n                    </a>\n                  )}\n                />\n                <GoogleLogin\n                  clientId=\"99398379882-rgd084aj9nvmn18uhio87pa6cq31jov2.apps.googleusercontent.com\"\n                  onSuccess={this.responseSuccessGoogle}\n                  onFailure={this.responseFailureGoogle}\n                  render={(renderProps) => (\n                    <a\n                      href=\"#\"\n                      onClick={renderProps.onClick}\n                      className=\"social\"\n                    >\n                      <i className=\"fab fa-google\"></i>\n                    </a>\n                  )}\n                />\n                {/* <a href=\"#\" className=\"social\">\n                  <i className=\"fab fa-google\"></i>\n                </a>\n                <a href=\"#\" className=\"social\">\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </a> */}\n              </div>\n              <span>or create your own account</span>\n\n              <TextField\n                required\n                label=\"Full Name\"\n                name=\"fullNameS\"\n                onChange={this.hchange}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoFocus\n              />\n              <TextField\n                required\n                error={this.state.emailErrorS}\n                type=\"email\"\n                label=\" Email\"\n                name=\"emailS\"\n                onChange={this.hchange}\n                helperText={this.state.emailErrorS}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                required\n                error={this.state.passwordErrorS}\n                type=\"password\"\n                label=\" Password\"\n                name=\"passwordS\"\n                onChange={this.hchange}\n                helperText={this.state.passwordErrorS}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoFocus\n              />\n              <Button\n                size=\"large\"\n                className=\"btn btn-info btn-rounded\"\n                type=\"submit\"\n              >\n                Sign up\n              </Button>\n              <div className=\" btn-hidden\" onClick={this.htoggle2}>\n                Already have an account? Sign in\n              </div>\n            </form>\n          </div>\n\n          <div\n            className=\"form-container sign-in-container\"\n            style={{ display: this.state.display }}\n          >\n            <form onSubmit={this.onSubmitL}>\n              <h1 className=\"font-weight-bold\">Sign in</h1>\n              <div className=\"social-container\">\n                <FacebookLogin\n                  className=\"social\"\n                  appId=\"436529724191626\"\n                  autoLoad={false}\n                  fields=\"name,email,picture.type(large)\"\n                  callback={this.responseFacebook}\n                  render={(renderProps) => (\n                    <a onClick={renderProps.onClick} className=\"social\">\n                      <i className=\"fab fa-facebook-f\"></i>\n                    </a>\n                  )}\n                />\n                <GoogleLogin\n                  clientId=\"99398379882-rgd084aj9nvmn18uhio87pa6cq31jov2.apps.googleusercontent.com\"\n                  onSuccess={this.responseSuccessGoogle}\n                  onFailure={this.responseFailureGoogle}\n                  render={(renderProps) => (\n                    <a\n                      href=\"#\"\n                      onClick={renderProps.onClick}\n                      className=\"social\"\n                    >\n                      <i className=\"fab fa-google\"></i>\n                    </a>\n                  )}\n                />\n                {/* <a href=\"#\" className=\"social\">\n                  <i className=\"fab fa-facebook-f\"></i>\n                </a> */}\n                {/* <a href=\"#\" className=\"social\">\n                  <i className=\"fab fa-google\"></i>\n                </a>\n                <a href=\"#\" className=\"social\">\n                  <i className=\"fab fa-linkedin-in\"></i>\n                </a> */}\n              </div>\n              <span>or use your account</span>\n              <TextField\n                required\n                error={this.state.emailErrorL}\n                helperText={this.state.emailErrorL}\n                name=\"emailL\"\n                label=\" Email\"\n                onChange={this.hchange}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                required\n                error={this.state.passwordErrorL}\n                helperText={this.state.passwordErrorL}\n                label=\" Password\"\n                type=\"password\"\n                name=\"passwordL\"\n                onChange={this.hchange}\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                autoFocus\n              />\n              <Button\n                size=\"large\"\n                className=\"btn btn-info btn-rounded \"\n                type=\"submit\"\n              >\n                Sign In\n              </Button>\n              <div className=\" btn-hidden\" onClick={this.htoggle}>\n                Don't have an account? Sign Up\n              </div>\n            </form>\n          </div>\n\n          <div className=\"overlay-container\">\n            <div className=\"overlay\">\n              <div className=\"overlay-panel overlay-left\">\n                <img className=\"chef\" src={chef} alt=\"\" />\n                <h1 className=\"font-weight-bold\">Good to see you!</h1>\n                <p className=\"pargraph\">\n                  You already have an account? <br></br> Sign in!\n                </p>\n                <Button\n                  size=\"large\"\n                  className=\"but\"\n                  id=\"signIn\"\n                  onClick={() => {\n                    this.setState({ islogin: true });\n                  }}\n                >\n                  Sign In\n                </Button>\n              </div>\n              <div className=\"overlay-panel overlay-right\">\n                <img className=\"chef\" src={waiter} alt=\"\" />\n\n                <h1 className=\"font-weight-bold\">Hello, Friend!</h1>\n                <p className=\"pargraph\">\n                  You don't have account yet? Don't worry! You still can join us\n                </p>\n                <Button\n                  size=\"large\"\n                  className=\"but\"\n                  id=\"signUp\"\n                  onClick={() => {\n                    this.setState({ islogin: true });\n                  }}\n                >\n                  Sign Up\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* /// */}\n      </div>\n    );\n  }\n}\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\profilePage\\Htabel.jsx",["163","164","165","166","167"],"import PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\n\nconst useRowStyles = makeStyles({\n  root: {\n    \"& > *\": {\n      borderBottom: \"unset\",\n    },\n  },\n});\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.id}\n        </TableCell>\n        <TableCell>{row.Location}</TableCell>\n        <TableCell>{row.Date}</TableCell>\n        <TableCell>{row.TotalPrice} JOD</TableCell>\n        {/* <TableCell align=\"right\">{row.protein}</TableCell> */}\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                Details\n              </Typography>\n              <Table className=\"subTable\" size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Quantity</TableCell>\n                    <TableCell>Price</TableCell>\n                    <TableCell>Additions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.history.map((historyRow) => (\n                    <TableRow key={historyRow.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {historyRow.name}\n                      </TableCell>\n                      <TableCell>{historyRow.number}</TableCell>\n                      <TableCell>\n                        {historyRow.price * historyRow.number} JOD\n                      </TableCell>\n                      <TableCell>\n                        {historyRow.adds.map(\n                          (add) => add.value && add.name + \" | \"\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nexport default function CollapsibleTable() {\n  const [history, sethistory] = useState([]);\n  const [data1, setdata1] = useState([]);\n\n  const createData = (h) => {\n    let dataarr = [];\n    for (let i = h.length - 1; i >= 0; i--) {\n      let Totalprice = 0;\n      h[i].p.map((order) => {\n        Totalprice += order.price * order.number;\n      });\n\n      const obj = [\n        {\n          id: i + 1,\n          Location: \"Amman - Marka\",\n          Date: moment(h[i].created_at).format(\"DD-MM-YYYY || hh:mm A\"),\n          TotalPrice: Totalprice,\n          history: h[i].p,\n        },\n      ];\n\n      dataarr = [...dataarr, ...obj];\n    }\n    setdata1(dataarr);\n  };\n\n  const gethistory = async () => {\n    axios\n      .get(\"http://localhost:8000/history/\" + sessionStorage.getItem(\"userId\"))\n      .then((res) => {\n        sethistory(res.data);\n        createData(res.data);\n      });\n  };\n\n  useEffect(() => {\n    gethistory();\n  }, []);\n\n  return (\n    <TableContainer className=\"HTable\" component={Paper}>\n      <h2>List of orders</h2>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            <TableCell />\n            <TableCell>#</TableCell>\n            <TableCell>Location</TableCell>\n            <TableCell>Date</TableCell>\n            <TableCell>Total Price</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data1.map((row) => (\n            <Row key={row.id} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\Pages\\profilePage\\editData.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\gallery.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\about.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\slider.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\Server\\serves.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\location.jsx",["168"],"import React from \"react\";\nimport \"./location.scss\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport { Component } from \"react\";\nimport RoomIcon from \"@material-ui/icons/Room\";\n// import LocalShippingIcon from '@material-ui/icons/LocalShipping';\n\nconst mapStyle = {\n  width: \"100%\",\n  height: \"45vh\",\n  position: \"relative\",\n};\nclass Location extends Component {\n  render() {\n    return (\n      <div\n        data-aos=\"fade-in\"\n        data-aos-duration=\"1500\"\n        className=\"container-Location\"\n      >\n        <div class=\"row\">\n          <div class=\"column\">\n            <div class=\"card\">\n              <div style={mapStyle}>\n                <Map\n                  google={this.props.google}\n                  zoom={14}\n                  google={this.props.google}\n                  initialCenter={{\n                    lat: 31.97,\n                    lng: 35.9092,\n                  }}\n                >\n                  <Marker\n                    onClick={this.onMarkerClick}\n                    name={\"Current location\"}\n                  />\n\n                  <InfoWindow onClose={this.onInfoWindowClose}></InfoWindow>\n                </Map>\n              </div>\n            </div>\n          </div>\n          <div class=\"column\">\n            <div class=\"card\">\n              <h2>\n                <RoomIcon style={{ color: \"#02594d\", fontSize: \"2rem\" }} /> Our\n                location\n              </h2>\n              {/* <p>We will to see you</p> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCORk1D7UpDb5z_7mVnLpvdLqJog5rR9Ak\",\n})(Location);\n","C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\ProfileCards.jsx",[],"C:\\Users\\orange\\Desktop\\OCA-projects\\project5-MERN-ToolWebsite\\Code\\frontend\\src\\component\\HomeComponents\\ProfileCard.jsx",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":59,"column":29,"nodeType":"175","messageId":"176","endLine":59,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":83,"column":22,"nodeType":"179","messageId":"180","endLine":83,"endColumn":24},{"ruleId":"177","severity":1,"message":"178","line":21,"column":31,"nodeType":"179","messageId":"180","endLine":21,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":31,"column":38,"nodeType":"179","messageId":"180","endLine":31,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":30,"column":31,"nodeType":"179","messageId":"180","endLine":30,"endColumn":33},{"ruleId":"177","severity":1,"message":"178","line":32,"column":38,"nodeType":"179","messageId":"180","endLine":32,"endColumn":40},{"ruleId":"177","severity":1,"message":"178","line":42,"column":37,"nodeType":"179","messageId":"180","endLine":42,"endColumn":39},{"ruleId":"181","severity":1,"message":"182","line":46,"column":6,"nodeType":"183","endLine":46,"endColumn":12,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"174","line":57,"column":32,"nodeType":"175","messageId":"176","endLine":57,"endColumn":34},{"ruleId":"177","severity":1,"message":"178","line":67,"column":22,"nodeType":"179","messageId":"180","endLine":67,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"189","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"190","line":6,"column":18,"nodeType":"187","messageId":"188","endLine":6,"endColumn":27},{"ruleId":"185","severity":1,"message":"191","line":27,"column":10,"nodeType":"187","messageId":"188","endLine":27,"endColumn":14},{"ruleId":"185","severity":1,"message":"192","line":27,"column":16,"nodeType":"187","messageId":"188","endLine":27,"endColumn":23},{"ruleId":"185","severity":1,"message":"193","line":28,"column":10,"nodeType":"187","messageId":"188","endLine":28,"endColumn":15},{"ruleId":"185","severity":1,"message":"194","line":28,"column":17,"nodeType":"187","messageId":"188","endLine":28,"endColumn":25},{"ruleId":"185","severity":1,"message":"195","line":29,"column":10,"nodeType":"187","messageId":"188","endLine":29,"endColumn":15},{"ruleId":"185","severity":1,"message":"196","line":29,"column":17,"nodeType":"187","messageId":"188","endLine":29,"endColumn":25},{"ruleId":"197","severity":1,"message":"198","line":8,"column":7,"nodeType":"199","endLine":8,"endColumn":42},{"ruleId":"200","severity":1,"message":"201","line":204,"column":23,"nodeType":"199","endLine":204,"endColumn":75},{"ruleId":"200","severity":1,"message":"202","line":214,"column":23,"nodeType":"199","endLine":218,"endColumn":24},{"ruleId":"200","severity":1,"message":"201","line":298,"column":23,"nodeType":"199","endLine":298,"endColumn":75},{"ruleId":"200","severity":1,"message":"202","line":308,"column":23,"nodeType":"199","endLine":312,"endColumn":24},{"ruleId":"203","severity":1,"message":"204","line":403,"column":5,"nodeType":"205","messageId":"206","endLine":405,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":427,"column":21,"nodeType":"199","endLine":427,"endColumn":73},{"ruleId":"200","severity":1,"message":"202","line":437,"column":21,"nodeType":"199","endLine":441,"endColumn":22},{"ruleId":"200","severity":1,"message":"201","line":519,"column":21,"nodeType":"199","endLine":519,"endColumn":73},{"ruleId":"200","severity":1,"message":"202","line":529,"column":21,"nodeType":"199","endLine":533,"endColumn":22},{"ruleId":"185","severity":1,"message":"207","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"185","severity":1,"message":"208","line":16,"column":38,"nodeType":"187","messageId":"188","endLine":16,"endColumn":48},{"ruleId":"185","severity":1,"message":"209","line":97,"column":10,"nodeType":"187","messageId":"188","endLine":97,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":104,"column":26,"nodeType":"175","messageId":"176","endLine":104,"endColumn":28},{"ruleId":"181","severity":1,"message":"210","line":134,"column":6,"nodeType":"183","endLine":134,"endColumn":8,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":28,"column":19,"nodeType":"214","endLine":28,"endColumn":45},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getdata' and 'match.params.product'. Either include them or remove the dependency array.","ArrayExpression",["217"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'TextField' is defined but never used.","'name' is assigned a value but never used.","'setname' is assigned a value but never used.","'email' is assigned a value but never used.","'setemail' is assigned a value but never used.","'phone' is assigned a value but never used.","'setphone' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'PropTypes' is defined but never used.","'useContext' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gethistory'. Either include it or remove the dependency array.",["218"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [data, getdata, match.params.product]",{"range":"223","text":"224"},"Update the dependencies array to be: [gethistory]",{"range":"225","text":"226"},[1372,1378],"[data, getdata, match.params.product]",[4347,4349],"[gethistory]"]